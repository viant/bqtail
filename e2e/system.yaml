init:

  bqTail: $Cat('config/bqtail.json')
  bqTailConfig:  $AsString($bqTail)

  bqDispatch: $Cat('config/bqdispatch.json')
  bqDispatchConfig:  $AsString($bqDispatch)

  slackOAuth: $Cat('$env.HOME/.secret/slack-e2e.json')

pipeline:

  createTriggerBucket:
    bqTail:
      action: storage:create
      region: $region
      isDir: true
      dest:
        URL: gs://${triggerBucket}
        credentials: $gcpCredentials

    operation:
      action: storage:create
      region: $region
      isDir: true
      dest:
        URL: gs://${opsBucket}
        credentials: $gcpCredentials
    export:
      action: storage:create
      region: $region
      isDir: true
      dest:
        URL: gs://${exportBucket}
        credentials: $gcpCredentials

  uploadConfigs:
    bqTail:
      action: storage:upload
      sourceKey: bqTailConfig
      dest:
        URL: gs://${configBucket}/BqTail/config.json
        credentials: $gcpCredentials

    bqDispatch:
      action: storage:upload
      sourceKey: bqDispatchConfig
      dest:
        URL: gs://${configBucket}/BqDispatch/config.json
        credentials: $gcpCredentials




    deployBqTailKMSKey:
      action: gcp/kms:deployKey
      credentials: $gcpCredentials
      ring: ${prefix}_ring
      key: ${prefix}_key
      purpose: ENCRYPT_DECRYPT
      bindings:
        - role: roles/cloudkms.cryptoKeyEncrypterDecrypter
          members:
            - serviceAccount:${gcp.serviceAccount}


    encryptSlackOAuthToken:
      action: gcp/kms:encrypt
      ring: ${prefix}_ring
      key: ${prefix}_key
      plainData: $AsString($slackOAuth)
      dest:
        URL: gs://${configBucket}/Secrets/slack.json.enc
        credentials: ${gcpCredentials}
      logging: false

  pubsub:
    action: msg:setupResource
    resources:
      - URL: ${prefix}_bqtailbus
        type: topic
        vendor: gcp
        credentials: ${gcpCredentials}

      - URL: ${prefix}_bqtailsub
        type: subscription
        vendor: gcp
        credentials: ${gcpCredentials}
        config:
          topic:
            URL: /projects/${projectID}/topics/${prefix}_bqtailbus


  cleanup:
    action: storage:remove
    assets:
#      - URL: gs://${opsBucket}/BqTail/
#        credentials: $gcpCredentials
#      - URL: 'gs://${opsBucket}/BqDispatch/'
#        credentials: $gcpCredentials
      - URL: 'gs://${configBucket}/BqTail/_.cache'
        credentials: $gcpCredentials
#      - URL: 'gs://${configBucket}/BqTail/Rules'
#        credentials: $gcpCredentials
